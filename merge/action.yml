name: Merge

inputs:
  token:
    default: ${{ github.token }}
  gpg_private_key:
    default: ""
  gpg_passphrase:
    default: ""
  path:
    default: "."

runs:
  using: composite
  steps:
    - uses: actions/checkout@v5
      with:
        ref: ${{ github.event.pull_request.base.ref }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        fetch-depth: 0
    - if: inputs.gpg_private_key != ''
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ inputs.gpg_private_key }}
        passphrase: ${{ inputs.gpg_passphrase }}
        git_user_signingkey: true
        git_commit_gpgsign: true
        workdir: ${{ inputs.path }}
    - shell: bash
      run: |
        gh api "repos/${{ github.repository }}/branches/${{ github.event.pull_request.base.ref }}/protection/required_status_checks/contexts" \
          | jq -r ".[]" \
          | sort > expected.txt \
          || rm -f expected.txt
        if [[ -f expected.txt ]]; then
          echo Expected:
          cat expected.txt
          echo
        fi
      env:
        GH_TOKEN: ${{ inputs.token }}
    - shell: bash
      run: |
        for attempt in {1..10}; do
          gh pr checks "${{ github.event.pull_request.number }}" \
            --repo "${{ github.repository }}" \
            --required \
            --json name,state \
            --jq '.[] | select(.state == "SUCCESS") | .name' \
            | sort > actual.txt \
            || rm -f actual.txt
          if [[ -f actual.txt ]]; then
            echo Actual:
            cat actual.txt
            echo
          fi
          if [[ -f expected.txt && -f actual.txt ]]; then
            if ! diff -q expected.txt actual.txt > /dev/null; then
              echo "Failed on attempt ${attempt}. Sleeping..."
              sleep 60
              continue
            fi
          fi
          break
        done
      env:
        GH_TOKEN: ${{ github.token }}
    - if: inputs.gpg_private_key != ''
      shell: bash
      run: |
        if git merge-base --is-ancestor \
          "${{ github.event.pull_request.base.ref }}" \
          "origin/${{ github.event.pull_request.head.ref }}"; then
          git merge --ff-only "origin/${{ github.event.pull_request.head.ref }}"
          git push
        else
          git config user.name "The Type Founders"
          git config user.email admin@thetypefounders.com
          git checkout "${{ github.event.pull_request.head.ref }}"
          git rebase "${{ github.event.pull_request.base.ref }}"
          git push --force
        fi
      working-directory: ${{ inputs.path }}
    - if: inputs.gpg_private_key == ''
      shell: bash
      run: |
        git merge --ff-only "origin/${{ github.event.pull_request.head.ref }}"
        git push
      working-directory: ${{ inputs.path }}
