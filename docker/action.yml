name: Docker

inputs:
  repository:
    default: ${{ github.repository }}
  actor:
    default: ${{ github.actor }}
  token:
    default: ${{ github.token }}
  arguments:
    required: false
  platforms:
    default: linux/amd64
  version:
    required: true

runs:
  using: composite
  steps:
    - id: context
      shell: bash
      run: |
        if ! [[ "${{ inputs.version }}" =~ ^[0-9]+ ]]; then
          echo "tags=ghcr.io/${{ github.repository }}:${{ inputs.version }}" >> "${GITHUB_OUTPUT}"
          exit 0
        fi
        patch_version=${{ inputs.version }}
        minor_version=${patch_version%.*}
        major_version=${minor_version%.*}
        cat >> "${GITHUB_OUTPUT}" <<OUTER
        tags<<INNER
        ghcr.io/${{ inputs.repository }}:${major_version}
        ghcr.io/${{ inputs.repository }}:${minor_version}
        ghcr.io/${{ inputs.repository }}:${patch_version}
        ghcr.io/${{ inputs.repository }}:latest
        INNER
        OUTER
    - uses: docker/setup-buildx-action@v3
    - if: inputs.platforms != 'linux/amd64'
      uses: docker/setup-qemu-action@v3
    - uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.actor }}
        password: ${{ inputs.token }}
    - uses: docker/build-push-action@v5
      with:
        build-args: ${{ inputs.arguments }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.context.outputs.tags }}
        push: true
