name: Checkout

inputs:
  repository:
    default: ${{ github.repository }}
  reference:
    default: ${{ github.sha }}
  token:
    default: ${{ github.token }}
  path:
    default: "."
  clean:
    default: true
  fetch-depth:
    default: 1
  exclude:
    default: ""
  include:
    default: "*"
  persist-credentials:
    default: true
  submodules:
    default: false

runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.repository }}
        ref: ${{ inputs.reference }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}
        clean: ${{ inputs.clean }}
        fetch-depth: ${{ inputs.fetch-depth }}
        persist-credentials: ${{ inputs.persist-credentials }}
        submodules: ${{ inputs.submodules }}
    - id: context
      shell: bash
      run: |
        git lfs ls-files \
          --exclude "${{ inputs.exclude }}" \
          --include "${{ inputs.include }}" \
          --long | sort > .key
        key=$(cat .key | sha256sum | cut -d " " -f 1)
        echo "The key is ${key} based on $(cat .key | wc -l | xargs) files:"
        head .key
        echo ...
        echo "key=${key}" >> "${GITHUB_OUTPUT}"
        rm .key
      working-directory: ${{ inputs.path }}
    - id: cache
      uses: actions/cache/restore@v4
      with:
        path: ${{ inputs.path }}/.git/lfs
        key: v1-${{ steps.context.outputs.key }}
        restore-keys: v1-
    - shell: bash
      run: |
        git lfs pull \
          --exclude "${{ inputs.exclude }}" \
          --include "${{ inputs.include }}"
      working-directory: ${{ inputs.path }}
    - if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache/save@v4
      with:
        path: ${{ inputs.path }}/.git/lfs
        key: v1-${{ steps.context.outputs.key }}
